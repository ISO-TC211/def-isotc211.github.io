name: build

on:
  push:
    branches: [ main, staging ]
  pull_request:
  repository_dispatch:

jobs:
  build:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      - run: npm install
      - name: Setup snaps
        run: |
          sudo snap install yq
      - name: Update submodules
        run: |
          make update-init update-modules
      - name: Build site
        env:
          JEKYLL_ENV: production
        run: make all
      - name: Upload site
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: _site
          retention-days: 1

  deploy:
    name: Deploy site
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging' }}
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
      url: ${{ github.ref == 'refs/heads/main' && 'https://defs.isotc211.org' || 'https://staging-defs.isotc211.org' }}
    steps:
      - name: Download site
        uses: actions/download-artifact@v3
        with:
          name: site
          path: _site
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - run: 'ls -al'

      - name: Deploy to AWS
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws configure set default.s3.max_concurrent_requests 100
          aws configure set default.s3.max_queue_size 10000
          # aws configure set default.s3.use_accelerate_endpoint true
          aws configure set default.s3.payload_signing_enabled false
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.html" --content-type "text/html; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*" --include "*.json" --content-type "text/json; charset=utf-8"
          aws s3 sync _site s3://$S3_BUCKET_NAME --region=$AWS_REGION --delete --no-progress --exclude "*.html,*.json" --include "*"
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
